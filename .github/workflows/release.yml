name: release
on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  release:
    name: release
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
    steps:
      - name: release
        id: release
        uses: google-github-actions/release-please-action@v3.7.13
        with:
          # https://github.com/google-github-actions/release-please-action#configuration
          release-type: python
          package-name: poetry-plugin-upgrade
          changelog-types: >
            [
              {"type": "build", "section": "🏗️ Build System", "hidden": true},
              {"type": "chore", "section": "🧹 Miscellaneous Chores", "hidden": true},
              {"type": "ci", "section": "👷 Continuous Integration", "hidden": true},
              {"type": "docs", "section": "📝 Documentation"},
              {"type": "feat", "section": "🚀 Features"},
              {"type": "fix", "section": "🐛 Bug Fixes"},
              {"type": "perf", "section": "⚡ Performance Improvements"},
              {"type": "refactor", "section": "♻️ Code Refactoring", "hidden": true},
              {"type": "revert", "section": "⏪️ Reverts"},
              {"type": "style", "section": "💄 Styles", "hidden": true},
              {"type": "test", "section": "✅ Tests", "hidden": true}
            ]
          include-v-in-tag: false

  publish:
    name: publish
    runs-on: ubuntu-latest
    needs: release
    # only run when a new release is created
    if: ${{ needs.release.outputs.release_created }}
    strategy:
      fail-fast: true
      matrix:
        environment: [gemfury]
    environment: ${{ matrix.environment }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.6.1

      - name: Build
        run: poetry build

      - name: publish gemfury
        if: ${{ matrix.environment=='gemfury' }}
        run: |
          poetry config repositories.gemfury ${{ secrets.GEMFURY_REPOSITORY_URL }}
          poetry config http-basic.gemfury ${{ secrets.GEMFURY_PUBLISH_TOKEN }} NOPASS
          poetry publish -r gemfury -vvv
